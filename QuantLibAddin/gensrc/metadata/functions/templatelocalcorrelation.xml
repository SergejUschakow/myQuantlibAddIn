<Category name='templatelocalcorrelation'>
  <description>functions and methods for template based local correlation model.</description>
  <displayName>Template Local Correlation Model</displayName>
  <xlFunctionWizardCategory>QuantLib - Financial</xlFunctionWizardCategory>
  <serializationIncludes>
    <include>qlo/conversions/coercetermstructure.hpp</include>
    <include>qlo/volatilities.hpp</include>
    <include>ql/termstructures/volatility/equityfx/localvoltermstructure.hpp</include>
    <include>ql/experimental/templatemodels/multiasset/localcorrelationbsmodel.hpp</include>
    <include>ql/experimental/termstructures/localcorrtermstructure.hpp</include>
    <include>ql/experimental/termstructures/Helper/CalibratorLocalCorrInt.hpp</include>
    <include>ql/experimental/termstructures/Helper/ParticleMethodUtils.hpp</include>
    <include>qlo/pricingengines.hpp</include>
    <include>qlo/processes.hpp</include>
    <include>qlo/termstructures.hpp</include>
    <include>qlo/pricingengines.hpp</include>
    <include>qlo/templatelocalcorrelation.hpp</include>
  </serializationIncludes>
  <addinIncludes>
    <include>qlo/handleimpl.hpp</include>
    <include>qlo/conversions/coercetermstructure.hpp</include>
    <include>qlo/pricingengines.hpp</include>
    <include>ql/experimental/templatemodels/multiasset/localcorrelationbsmodel.hpp</include>
    <include>ql/experimental/termstructures/localcorrtermstructure.hpp</include>
    <include>qlo/volatilities.hpp</include>
    <include>qlo/processes.hpp</include>
    <include>ql/termstructures/volatility/equityfx/localvoltermstructure.hpp</include>
    <include>ql/experimental/termstructures/Helper/CalibratorLocalCorrInt.hpp</include>
    <include>ql/experimental/termstructures/Helper/ParticleMethodUtils.hpp</include>
    <include>qlo/templatelocalcorrelation.hpp</include>
  </addinIncludes>
  <copyright>
    Copyright (C) 2017, Sebastian Schlenkrich, Cord Harms
  </copyright>
  <Functions>

    <!-- Constructor(s) for LocalCorrelationBSModel -->
    
    <Constructor name='qlRealLocalCorrelationModel'>
      <libraryFunction>LocalCorrelationBSModel</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='DiscountCurve'>
            <type>QuantLib::YieldTermStructure</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>YieldTermStructure for discounting.</description>
          </Parameter>
          <Parameter name='Aliases'>
            <type>string</type>
            <tensorRank>vector</tensorRank>
            <description>Aliases</description>
          </Parameter>
          <Parameter name='BSProcesses'>
            <type>QuantLib::GeneralizedBlackScholesProcess</type>
            <tensorRank>vector</tensorRank>
            <description>Array of Black Scholes processes</description>
          </Parameter>
          <Parameter name='LocalCorrelationTermStructure'>
            <type>QuantLib::LocalCorrTermStructure</type>
            <superType>libToHandle</superType>
            <tensorRank>scalar</tensorRank>
            <description>term structure for local correlation</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>

    <Constructor name='qlCTSlocalInCrossCorrFX'>
      <libraryFunction>CTSlocalInCrossCorrelationFX</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='BSProcesses'>
            <type>QuantLib::GeneralizedBlackScholesProcess</type>
            <tensorRank>vector</tensorRank>
            <description>Array of Black Scholes processes</description>
          </Parameter>
          <Parameter name='BSProcessLocalCorr'>
            <type>QuantLib::GeneralizedBlackScholesProcess</type>
            <tensorRank>scalar</tensorRank>
            <description>Black Scholes process to determine local correlation</description>
          </Parameter>
          <Parameter name='CalibratorLocalCorr'>
            <type>QuantLib::CalibratorLocalCorrInt</type>
            <tensorRank>scalar</tensorRank>
            <description>Calibrator for local correlation</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>
    
    
    <Constructor name='qlCTSParticleMethodCalibrator'>
      <libraryFunction>ParticleMethodUtils</libraryFunction>
      <SupportedPlatforms>
        <SupportedPlatform name='Excel'/>
        <SupportedPlatform name='Cpp'/>
      </SupportedPlatforms>
      <ParameterList>
        <Parameters>
          <Parameter name='KernelString' default='"QuarticKernel"'>
            <type>string</type>
            <tensorRank>scalar</tensorRank>
            <description>Kernel specification</description>
          </Parameter>
          <Parameter name='NumberOfPaths' default='1024'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>number of paths for particle method</description>
          </Parameter>
          <Parameter name='MaxTime'>
            <type>QuantLib::Time</type>
            <tensorRank>scalar</tensorRank>
            <description>maxTime for particle method grid</description>
          </Parameter>
          <Parameter name='DeltaT'>
            <type>QuantLib::Time</type>
            <tensorRank>scalar</tensorRank>
            <description>time step in the grid</description>
          </Parameter>
          <Parameter name='MinT' default='0.25'>
            <type>QuantLib::Time</type>
            <tensorRank>scalar</tensorRank>
            <description>minTime for particle method grid</description>
          </Parameter>
          <Parameter name='Kappa' default='3'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>kappa for bandwidth</description>
          </Parameter>
          <Parameter name='SigmaAVR'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>average volatility for bandwidth</description>
          </Parameter>
          <Parameter name='ExponentN' default='-0.25'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>exponent of N to determine bandwidth</description>
          </Parameter>
          <Parameter name='GridMinQuantile' default='0.1'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>minQuantile for strike grid</description>
          </Parameter>
          <Parameter name='GridMaxQuantile' default='0.9'>
            <type>QuantLib::Real</type>
            <tensorRank>scalar</tensorRank>
            <description>minQuantile for strike grid</description>
          </Parameter>
          <Parameter name='Ns1' default='30'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>strike grid amount indicator 1 (paper: nS)</description>
          </Parameter>
          <Parameter name='Ns2' default='15'>
            <type>long</type>
            <tensorRank>scalar</tensorRank>
            <description>strike grid amount indicator 2 (paper: nS')</description>
          </Parameter>
        </Parameters>
      </ParameterList>
    </Constructor>
  </Functions>
</Category>
